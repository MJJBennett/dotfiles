" Vundle

set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=/usr/local/opt/fzf
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'Valloric/YouCompleteMe'
Plugin 'rhysd/vim-clang-format'
" Emmet - HTML
Plugin 'mattn/emmet-vim'
Plugin 'tpope/vim-surround'
Plugin 'tell-k/vim-autopep8'
Plugin 'rust-lang/rust.vim'
Plugin 'neoclide/coc.nvim'

Plugin 'junegunn/fzf.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

" YCM Configuration
let g:ycm_clangd_binary_path = "/usr/local/Cellar/llvm/8.0.0/bin/clangd/"
let g:ycm_server_keep_logfiles = 1
let g:ycm_server_log_level = 'debug'
let g:ycm_global_ycm_extra_conf = "~/.vim/.ycm_extra_conf.py"
let g:ycm_extra_conf_globlist = ['~/.vim/.ycm_extra_conf.py']
let g:ycm_confirm_extra_conf = 0
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
" let g:ycm_semantic_triggers = {
"     \ 'C': [ 're!\w{4}' ]
"     \ }
let g:ycm_semantic_triggers = {} 


" Clang Format Configuration
let g:clang_format#style_options = {
    \ "BreakBeforeBraces" : "Allman",
    \ "AlwaysBreakTemplateDeclarations" : "true",
    \ "AccessModifierOffset" : -4,
    \ "PointerAlignment" : "Left",
    \ "ColumnLimit" : "99",
    \ "AllowShortCaseLabelsOnASingleLine" : "true",
    \ "AllowShortFunctionsOnASingleLine" : "All",
    \ "AllowShortIfStatementsOnASingleLine" : "true",
    \ "TabWidth" : 4,
    \ "UseTab" : "Never",
    \ "AlignOperands" : "true",
    \ "AlignTrailingComments" : "true",
    \ "AlignConsecutiveAssignments" : "true",
    \ "Standard" : "C++11"}

" Pep8 Format Configuration
let g:autopep8_max_line_length=80
let g:autopep8_disable_show_diff=1

" NetRW Configuration (Technically builtin, but hey)
let g:netrw_liststyle = 3
let g:netrw_banner = 0
let g:netrw_browse_split = 4

" JavaScript prettifier
autocmd FileType javascript setlocal equalprg=js-beautify\ --stdin
autocmd FileType javascript setlocal equalprg=js-beautify\ --stdin
