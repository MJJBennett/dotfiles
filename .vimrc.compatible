" Initial sources here

" @@ Things that must go at the start of the file.
" Set <Leader> to <Space>
let mapleader=" " 

" @ Keybinds
nnoremap <Leader>o o<Esc>
nnoremap <Leader>O O<Esc>
inoremap jj <Esc>
nnoremap ; :
" Move based on visual (not actual) lines
" nnoremap j g
" nnoremap k gk
nnoremap <Leader>ev :vsp $MYVIMRC<CR>
nnoremap <Leader>sv :source $MYVIMRC<CR>
" Spelling
nnoremap <Leader>sp :set spell spelllang=en_ca<CR>
nnoremap <Leader>w z=

" @ Keybinds > Movement
nnoremap <Leader>j Lz.
nnoremap <Leader>k Hz.
nnoremap <Leader><Leader>j <C-W>j
nnoremap <Leader><Leader>k <C-W>k
nnoremap <Leader><Leader>l <C-W>l
nnoremap <Leader><Leader>h <C-W>h

" @ Keybinds > Extensions

" Autoformatters
vnoremap <C-R><C-F> :ClangFormat<CR>
nnoremap <C-R><C-A> :ClangFormat<CR>
nnoremap <C-J><C-A> :%!prettier %<CR>
autocmd FileType python noremap <buffer> <C-R><C-A> :call Autopep8()<CR>
autocmd FileType rust noremap <buffer> <C-R><C-A> :RustFmt<CR>

" Completer / IDE
nnoremap <C-B> :YcmCompleter GoTo<CR>
nnoremap <C-H>g :YcmCompleter GoTo<CR>
nnoremap <C-H>d :YcmCompleter GetDoc<CR>

" @@ QOL things

" @ Backspace
set backspace=indent,eol,start

" @ Sounds - disable beeping
set vb t_vb=

" @ Searching
" Incremental search
set incsearch
" Highlight matches
set hlsearch
" Keybind to unhighlight matches
nnoremap <Leader>h :nohlsearch<CR>

" @ Tab settings
set softtabstop=4
set shiftwidth=4
set tabstop=4
set autoindent
set smartindent
set expandtab
set clipboard+=unnamed

" @ Also tab settings ;)
nnoremap <Leader>th :tabprevious<CR>
nnoremap <Leader>tl :tabnext<CR>

" @ Appearance settings
if !exists("g:syntax_on")
    syntax enable
endif
" showcmd can show you the last command at the bottom
" set showcmd
" cursorline can underline the current ..line
" set cursorline
set showmatch " This moves the cursor back when doing parens

set number
set relativenumber
augroup numbertoggle
    autocmd!
    autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
    autocmd BufLeave,FocusLost,InsertEnter * set norelativenumber
augroup END

highlight LineNr ctermbg=Gray
highlight CursorLineNr ctermbg=Gray

" @ Folding
if has('folding')
    set foldenable
    set foldlevelstart=99
    " set foldnestmax=10
    nnoremap <Leader>f za
    vnoremap <Leader>f zf
    set foldmethod=indent
endif

" Mouse!
if has('mouse')
    set mouse=a
endif

" Additional vim config sourcing after here
" VIM - Remaps
" These maps overwrite all other maps, as they are added last.

" au BufNewFile,BufRead *.md :set spell spelllang=en_ca<CR>
au BufNewFile,BufRead *.asm :set ft=nasm

" I'm claiming <Leader>c for my misc commands
nnoremap <Leader>e :!
nnoremap <Leader>cf :!cat %<CR>
nnoremap <Leader>cw :!wc -w %<CR>
" Huge address space!!!
nnoremap <Leader>ccwt :!wt-start<CR>
nnoremap <Leader>ccu :!curl -o ~/.vimrc https://raw.githubusercontent.com/MJJBennett/dotfiles/master/.vimrc.compatible
nnoremap <Leader>ccf :20vs .<CR>
" This makes s work as no-copy d
nnoremap s "_d
" Repeat previous macro
nnoremap Q @@
" Opposite of J
nnoremap <Leader>n i<CR><ESC>
" Save files faster
nnoremap <Leader>s :w<CR>

if has('folding')
    set foldmethod=syntax
endif

function FixQuotes()
    " This function fixes more than just quotes
    " However, it is called 'FixQuotes'
    %s/“/"/ge
    %s/”/"/ge
    %s/’/'/ge
    %s/‘/'/ge
endfunction

nnoremap <Leader>fq :call FixQuotes()<CR>
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=100 |
    \ set expandtab |
    \ set foldmethod=indent |
    \ set autoindent |
    \ set fileformat=unix

" au BufRead,BufNewFile *.py,,*.cpp,*.h match BadWhitespace /\s\+$/

set encoding=utf-8

